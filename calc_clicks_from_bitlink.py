# -*- coding: utf-8 -*-
"""Урок_2_Посчитайте_клики_по_ссылкам.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yGh3qVEMkvjW4gkt2rbwp4BwAq6roc8f
"""

from dotenv import load_dotenv
import os
import requests
import json
from urllib.parse import urlparse

main_link = 'https://api-ssl.bitly.com/v4/'

def shorten_link(token, url):
  headers = {
    'Authorization' : f'Bearer {token}'
  }
  link = f'{main_link}bitlinks'
  body = {
       'long_url': url
  }
  response = requests.post(link,json = body, headers = headers)
  response.raise_for_status()
  return response.json()['link']

def count_clicks(token, url):
    headers = {
      'Authorization' : f'Bearer {token}'
    }
    link = f'{main_link}bitlinks/{urlparse(url).netloc}{urlparse(url).path}/clicks/summary'
    requests.get(link, headers = headers).raise_for_status()
    return requests.get(link, headers = headers).json()['total_clicks']

def is_bitlink(url,token):
  headers = {
    'Authorization' : f'Bearer {token}'
  }
  link = f'{main_link}bitlinks/{urlparse(url).netloc}{urlparse(url).path}'
  return requests.get(link, headers = headers).ok

def main():
  load_dotenv()
  TOKEN = os.environ['TOKEN']
  url = input('Введите ссылку: ')
  try:
    response = requests.get(url)
    response.raise_for_status()
  except requests.exceptions.HTTPError:
    print('Недействительная ссылка')
  else:
    if is_bitlink(url,TOKEN):
      try:
        clicks_count = count_clicks(TOKEN,url)
      except requests.exceptions.HTTPError:
        print('Операция завершена с ошибкой')
      else:
        print(f'По Вашей ссылке перешли {clicks_count} раз(а)')
    else:
      try:
        bitlink = shorten_link(TOKEN,url)
      except requests.exceptions.HTTPError:
        print('Операция завершена с ошибкой')
      else:
        print(f'Битлинк: {bitlink}')

if __name__ == '__main__':
    main()

